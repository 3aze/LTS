-- Global Functions Table
getgenv().Functions = {
    AutoBlowBubbles = false, AutoSell = false, AutoCollectPickups = false, FasterEggs = false,
    AutoClaimPlaytimeRewards = false, AutoClaimSeasonRewards = false, AutoClaimWheelSpin = false,
    AutoClaimChests = false, AutoBuyFromMarkets = false, AutoOpenMysteryBox = false, AutoGenieQuest = false,
    UseGoldenKeys = false, UseRoyalKeys = false, Disable3DRendering = false, BlackOutScreen = false, FixFPSCap = false
}

-- Cached Services and Remotes
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local RemoteEvent = ReplicatedStorage.Shared.Framework.Network.Remote.Event
local CollectPickupRemote = ReplicatedStorage.Remotes.Pickups.CollectPickup
local LocalPlayer = Players.LocalPlayer

-- Disable Idle Disconnect
for _, v in next, getconnections(LocalPlayer.Idled) do v:Disable() end

-- Utility Functions
local function CollectPickups()
    for _, v in next, Workspace.Rendered:GetChildren() do
        if v.Name == "Chunker" then
            for _, v2 in next, v:GetChildren() do
                if v2:FindFirstChildWhichIsA("MeshPart") or (v2:FindFirstChild("Part") and (v2.Part:FindFirstChild("Stars") or v2.Part:FindFirstChild("Mesh"))) then
                    CollectPickupRemote:FireServer(v2.Name)
                    v2:Destroy()
                end
            end
        end
    end
end

local function TweenTo(targetCFrame, speed)
    local humanoidRootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    local cframeValue = Instance.new("CFrameValue")
    cframeValue.Value = humanoidRootPart.CFrame
    cframeValue:GetPropertyChangedSignal("Value"):Connect(function()
        humanoidRootPart.CFrame = cframeValue.Value
    end)
    TweenService:Create(cframeValue, TweenInfo.new(speed, Enum.EasingStyle.Linear), {Value = targetCFrame}):Play()
end

local function TeleportAndTween(getTargetCFrame, tweenTime)
    RemoteEvent:FireServer("Teleport", "Workspace.Worlds.The Overworld.FastTravel.Spawn")
    task.wait(1)
    local targetCFrame = getTargetCFrame()
    TweenTo(targetCFrame, tweenTime)
    task.wait(tweenTime + 1)
    while (LocalPlayer.Character.HumanoidRootPart.Position - getTargetCFrame().Position).Magnitude > 20 do
        TweenTo(getTargetCFrame(), tweenTime)
        task.wait(tweenTime + 1)
    end
end

local function FancyNumberTranslator(fancyNumber)
    return ({["I"] = 1, ["II"] = 2, ["III"] = 3, ["IV"] = 4, ["V"] = 5, ["VI"] = 6})[fancyNumber] or 1
end

local function GetTimerText(text)
    local h, m, s = text:match("^(%d+):(%d%d):(%d%d)$")
    if h then return string.format("%02d:%02d:%02d", h, m, s) end
    m, s = text:match("^(%d+):(%d%d)$")
    if m then return string.format("00:%02d:%02d", m, s) end
    s = text:match("^(%d+)$")
    if s then return string.format("00:00:%02d", s) end
    return nil
end

local function CapitalizeTimeUnit(str)
    local num, unit = str:match("^(%d+)%s*(%a+)$")
    return num and unit and (num .. " " .. unit:sub(1, 1):upper() .. unit:sub(2)) or str
end

local function FetchRiftEggs(x25)
    local eggs = {}
    for _, v in next, Workspace.Rendered.Rifts:GetChildren() do
        if not table.find({"golden-chest", "royal-chest", "gift-rift"}, v.Name) then
            if x25 and v.Display.SurfaceGui.Icon.Luck.Text == "x25" or not x25 then
                table.insert(eggs, v)
            end
        end
    end
    return eggs
end

-- Library Setup
local Repository = "https://raw.githubusercontent.com/deividcomsono/Obsidian/main/"
local Library = loadstring(game:HttpGet(Repository .. "Library.lua"))()
local ThemeManager = loadstring(game:HttpGet(Repository .. "addons/ThemeManager.lua"))()
local SaveManager = loadstring(game:HttpGet(Repository .. "addons/SaveManager.lua"))()

local Window = Library:CreateWindow({Title = "Bubble Gum Sim Inf", Footer = "v1.4c", NotifySide = "Right", ShowCustomCursor = true})

local Tabs = {
    Main = Window:AddTab("Main", "user"),
    Potions = Window:AddTab("Potions", "beer"),
    Rifts = Window:AddTab("Rifts", "atom"),
    Teleports = Window:AddTab("Teleports", "globe"),
    CPUSettings = Window:AddTab("CPU Settings", "cpu"),
    UISettings = Window:AddTab("UI Settings", "settings")
}

-- Main Functions
local TabsMainFunctions = Tabs.Main:AddLeftGroupbox("Main Functions")
TabsMainFunctions:AddToggle("AutoBlowBubbles", {
    Text = "Auto Blow Bubbles", Default = false,
    Callback = function(v) Functions.AutoBlowBubbles = v task.spawn(function() while Functions.AutoBlowBubbles do RemoteEvent:FireServer("BlowBubble") task.wait() end end) end
})
TabsMainFunctions:AddToggle("AutoSell", {
    Text = "Auto Sell", Default = false,
    Callback = function(v) Functions.AutoSell = v task.spawn(function() while Functions.AutoSell do RemoteEvent:FireServer("SellBubble") task.wait() end end) end
})
TabsMainFunctions:AddToggle("AutoCollectPickups", {
    Text = "Auto Collect Pickups", Default = false,
    Callback = function(v) Functions.AutoCollectPickups = v task.spawn(function() while Functions.AutoCollectPickups do CollectPickups() task.wait(1) end end) end
})
TabsMainFunctions:AddToggle("FasterEggs", {
    Text = "Faster Eggs", Default = false,
    Callback = function(v) Functions.FasterEggs = v task.spawn(function() while Functions.FasterEggs do VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.R, false, game) task.wait() VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.R, false, game) end end) end
})

-- Quick Toggles
local TabsToggles = Tabs.Main:AddLeftGroupbox("Quick Toggles")
TabsToggles:AddButton({Text = "Toggle Best", Func = function()
    for _, t in pairs({"AutoBlowBubbles", "AutoCollectPickups", "FasterEggs", "AutoClaimPlaytimeRewards", "AutoClaimSeasonRewards", "AutoClaimWheelSpin", "AutoClaimChests", "AutoBuyFromMarkets", "AutoGenieQuest"}) do
        Library.Toggles[t]:SetValue(true)
    end
end, Tooltip = "WARNING: Toggles multiple features", Risky = true})
TabsToggles:AddButton({Text = "Untoggle All", Func = function()
    for _, t in pairs(Library.Toggles) do t:SetValue(false) end
end, Tooltip = "WARNING: Untoggles everything", Risky = true})

-- Other Functions
local TabsOtherFunctions = Tabs.Main:AddRightGroupbox("Other Functions")
TabsOtherFunctions:AddToggle("AutoClaimPlaytimeRewards", {
    Text = "Auto Claim Playtime Rewards", Default = false,
    Callback = function(v) Functions.AutoClaimPlaytimeRewards = v task.spawn(function() while Functions.AutoClaimPlaytimeRewards do for i = 1, 9 do ReplicatedStorage.Shared.Framework.Network.Remote.Function:InvokeServer("ClaimPlaytime", i) task.wait() end task.wait(60) end end) end
})
TabsOtherFunctions:AddToggle("AutoClaimWheelSpin", {
    Text = "Auto Claim Wheel Spin", Default = false,
    Callback = function(v) Functions.AutoClaimWheelSpin = v task.spawn(function() while Functions.AutoClaimWheelSpin do RemoteEvent:FireServer("ClaimFreeWheelSpin") task.wait(1) end end) end
})
TabsOtherFunctions:AddToggle("AutoClaimSeasonRewards", {
    Text = "Auto Claim Season Rewards", Default = false,
    Callback = function(v) Functions.AutoClaimSeasonRewards = v task.spawn(function() while Functions.AutoClaimSeasonRewards do RemoteEvent:FireServer("ClaimSeason") task.wait(1) end end) end
})
TabsOtherFunctions:AddToggle("AutoClaimChests", {
    Text = "Auto Claim Chests", Default = false,
    Callback = function(v) Functions.AutoClaimChests = v task.spawn(function() local chests = {"Void Chest", "Giant Chest", "Infinity Chest"} while Functions.AutoClaimChests do for _, chest in next, chests do RemoteEvent:FireServer("ClaimChest", chest, true) task.wait(1) end task.wait(60) end end) end
})
TabsOtherFunctions:AddToggle("AutoBuyFromMarkets", {
    Text = "Auto Buy From Markets", Default = false,
    Callback = function(v) Functions.AutoBuyFromMarkets = v task.spawn(function() local markets = {"alien-shop", "shard-shop"} while Functions.AutoBuyFromMarkets do for _, market in next, markets do for i = 1, 3 do RemoteEvent:FireServer("BuyShopItem", market, i) end end task.wait(60) end end) end
})
TabsOtherFunctions:AddToggle("AutoOpenMysteryBox", {
    Text = "Auto Open Mystery Box", Default = false,
    Callback = function(v) Functions.AutoOpenMysteryBox = v task.spawn(function() while Functions.AutoOpenMysteryBox do RemoteEvent:FireServer("UseGift", "Mystery Box", 1) RemoteEvent:FireServer("UseGift", "Golden Box", 1) for _, gift in next, Workspace.Rendered.Gifts:GetChildren() do RemoteEvent:FireServer("ClaimGift", gift.Name) task.wait(0.1) gift:Destroy() end task.wait(1) end end) end
})
TabsOtherFunctions:AddToggle("AutoGenieQuest", {
    Text = "Auto Genie Quest", Default = false,
    Callback = function(v) Functions.AutoGenieQuest = v task.spawn(function() while Functions.AutoGenieQuest do RemoteEvent:FireServer("StartGenieQuest", math.random(1, 3)) task.wait(3600) end end) end
})
TabsOtherFunctions:AddButton({Text = "Redeem All Codes", Func = function()
    for _, code in next, {"easter", "RELEASE", "Lucky", "Thanks"} do ReplicatedStorage.Shared.Framework.Network.Remote.Function:InvokeServer("RedeemCode", code) end
end})

-- Potions
local TabsPotionsCraft = Tabs.Potions:AddLeftGroupbox("Craft")
local function CraftPotions(type)
    for i = 2, 5 do RemoteEvent:FireServer("CraftPotion", type, i, true) task.wait(1) end
end
TabsPotionsCraft:AddButton({Text = "Craft Lucky Potions", Func = function() CraftPotions("Lucky") end})
TabsPotionsCraft:AddButton({Text = "Craft Speed Potions", Func = function() CraftPotions("Speed") end})
TabsPotionsCraft:AddButton({Text = "Craft Coins Potions", Func = function() CraftPotions("Coins") end})
TabsPotionsCraft:AddButton({Text = "Craft Mythic Potions", Func = function() CraftPotions("Mythic") end})
TabsPotionsCraft:AddButton({Text = "Craft All Potions", Func = function() for _, t in next, {"Lucky", "Speed", "Coins", "Mythic"} do CraftPotions(t) end end})

local TabsPotionsTimeLeft = Tabs.Potions:AddLeftGroupbox("Time Left")
local potionLabels = {
    Lucky = TabsPotionsTimeLeft:AddLabel("Lucky Potion: 00:00:00"),
    Speed = TabsPotionsTimeLeft:AddLabel("Speed Potion: 00:00:00"),
    Mythic = TabsPotionsTimeLeft:AddLabel("Mythic Potion: 00:00:00"),
    Coins = TabsPotionsTimeLeft:AddLabel("Coins Potion: 00:00:00")
}
TabsPotionsTimeLeft:AddDivider()
TabsPotionsTimeLeft:AddLabel("Notice: Only displays Rarity V.")
task.spawn(function()
    while task.wait() do
        for type, label in pairs(potionLabels) do
            local buff = LocalPlayer.PlayerGui.ScreenGui.Buffs:FindFirstChild(type)
            if buff and buff.Button.Label.Text and buff.Button.Icon:FindFirstChild("Potion" .. type .. "5") then
                local timer = GetTimerText(buff.Button.Label.Text)
                label:SetText(type .. " Potion: " .. (timer or CapitalizeTimeUnit(buff.Button.Label.Text) .. "+"))
            else
                label:SetText(type .. " Potion: 00:00:00")
            end
        end
    end
end)

local TabsPotionsUse = Tabs.Potions:AddRightGroupbox("Use")
local SelectPotionType = TabsPotionsUse:AddDropdown("SelectPotionType", {Values = {"Lucky", "Speed", "Coins", "Mythic"}, Default = 1, Text = "Select Potion Type"})
local SelectPotionRarity = TabsPotionsUse:AddDropdown("SelectPotionRarity", {Values = {"I", "II", "III", "IV", "V", "VI"}, Default = 1, Text = "Select Potion Rarity"})
local SelectPotionAmount = TabsPotionsUse:AddSlider("SelectPotionAmount", {Text = "Select Potion Amount", Default = 1, Min = 1, Max = 100, Rounding = 1})
TabsPotionsUse:AddButton({Text = "Use Potions", Func = function()
    for i = 1, math.floor(SelectPotionAmount.Value + 0.5) do RemoteEvent:FireServer("UsePotion", SelectPotionType.Value, FancyNumberTranslator(SelectPotionRarity.Value)) task.wait(0.3) end
end})
TabsPotionsUse:AddDivider()
TabsPotionsUse:AddButton({Text = "Use Hatching Potions", Func = function()
    for _, t in next, {"Lucky", "Speed", "Mythic"} do for i = 1, 35 do RemoteEvent:FireServer("UsePotion", t, 5) task.wait(0.3) end end
end, Tooltip = "WARNING: Uses 10 hours of Lucky V, Speed V, Mythic V", Risky = true})

-- Rifts
local TabsRiftsEggs = Tabs.Rifts:AddLeftGroupbox("Eggs")
local RiftEggsDropdown = TabsRiftsEggs:AddDropdown("RiftEggsDropdown", {Values = {}, Default = 1, Text = "Rift Eggs", Callback = function(v) if v then TeleportAndTween(function() return v.Display.CFrame end, 15) end end})
local x25EggsDropdown = TabsRiftsEggs:AddDropdown("x25EggsDropdown", {Values = {}, Default = 1, Text = "x25 Eggs", Callback = function(v) if v then TeleportAndTween(function() return v.Display.CFrame end, 15) end end})
TabsRiftsEggs:AddDivider()
TabsRiftsEggs:AddButton({Text = "Refresh Dropdowns", Func = function()
    local x25Eggs, riftEggs = FetchRiftEggs(true), FetchRiftEggs(false)
    x25EggsDropdown:SetValues(#x25Eggs > 0 and x25Eggs or nil) if #x25Eggs == 0 then Library:Notify({Title = "Missing x25-egg", Description = "Unable to find a active x25 Luck Egg.", Time = 4}) end
    RiftEggsDropdown:SetValues(#riftEggs > 0 and riftEggs or nil) if #riftEggs == 0 then Library:Notify({Title = "Missing rift-egg", Description = "Unable to find a active Rift Egg.", Time = 4}) end
end})

local TabsRiftsChests = Tabs.Rifts:AddRightGroupbox("Chests")
TabsRiftsChests:AddToggle("UseGoldenKeys", {
    Text = "Use Golden Keys", Default = false,
    Callback = function(v) Functions.UseGoldenKeys = v task.spawn(function() while Functions.UseGoldenKeys do RemoteEvent:FireServer("UnlockRiftChest", "golden-chest", false) task.wait() end end) end
})
TabsRiftsChests:AddToggle("UseRoyalKeys", {
    Text = "Use Royal Keys", Default = false,
    Callback = function(v) Functions.UseRoyalKeys = v task.spawn(function() while Functions.UseRoyalKeys do RemoteEvent:FireServer("UnlockRiftChest", "royal-chest", false) task.wait() end end) end
})
local function TeleportToChest(chestName)
    local chest = Workspace.Rendered.Rifts:FindFirstChild(chestName)
    if chest then TeleportAndTween(function() return chest.Chest[chestName].CFrame + Vector3.new(0, 6, 0) end, 15) else Library:Notify({Title = "Missing " .. chestName, Description = "Unable to find a active " .. chestName:gsub("-", " ") .. ".", Time = 4}) end
end
TabsRiftsChests:AddButton({Text = "Teleport To Golden Chest", Func = function() TeleportToChest("golden-chest") end})
TabsRiftsChests:AddButton({Text = "Teleport To Royal Chest", Func = function() TeleportToChest("royal-chest") end})

-- Teleports
local TabsMainTeleports = Tabs.Teleports:AddLeftGroupbox("Main Teleports")
local teleportLocations = {
    ["Teleport to The Overworld"] = "Workspace.Worlds.The Overworld.FastTravel.Spawn",
    ["Teleport to Floating Island"] = "Workspace.Worlds.The Overworld.Islands.Floating Island.Island.Portal.Spawn",
    ["Teleport to Outer Space"] = "Workspace.Worlds.The Overworld.Islands.Outer Space.Island.Portal.Spawn",
    ["Teleport to Twilight"] = "Workspace.Worlds.The Overworld.Islands.Twilight.Island.Portal.Spawn",
    ["Teleport to The Void"] = "Workspace.Worlds.The Overworld.Islands.The Void.Island.Portal.Spawn",
    ["Teleport to Zen"] = "Workspace.Worlds.The Overworld.Islands.Zen.Island.Portal.Spawn"
}
for text, path in pairs(teleportLocations) do
    TabsMainTeleports:AddButton({Text = text, Func = function() RemoteEvent:FireServer("Teleport", path) end})
end
TabsMainTeleports:AddButton({Text = "Teleport to Hatching Zone", Func = function() TeleportAndTween(function() return CFrame.new(-57, 9, -27) end, 1.4) end})
TabsMainTeleports:AddDivider()
TabsMainTeleports:AddButton({Text = "Unlock All Islands", Func = function()
    for _, island in next, Workspace.Worlds["The Overworld"].Islands:GetChildren() do
        firetouchinterest(island.Island.UnlockHitbox, LocalPlayer.Character.HumanoidRootPart, 0)
        task.wait()
        firetouchinterest(island.Island.UnlockHitbox, LocalPlayer.Character.HumanoidRootPart, 1)
        task.wait(0.3)
    end
end})

local TabsOtherTeleports = Tabs.Teleports:AddRightGroupbox("Other Teleports")
TabsOtherTeleports:AddButton({Text = "Teleport To Coin Farm Area", Func = function() TeleportAndTween(function() return CFrame.new(4, 15973, 44) end, 0.8) end})
TabsOtherTeleports:AddButton({Text = "Teleport To Best Egg", Func = function() TeleportAndTween(function() return CFrame.new(15, 10, -5) end, 0.5) end})

local TabsPlayerTeleports = Tabs.Teleports:AddRightGroupbox("Player Teleports")
local SelectPlayer = TabsPlayerTeleports:AddDropdown("SelectPlayer", {Values = {}, Default = 1, Text = "Select Player"})
TabsPlayerTeleports:AddButton({Text = "Teleport To Player", Func = function()
    local player = Players[SelectPlayer.Value]
    if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        TeleportAndTween(function() return player.Character.HumanoidRootPart.CFrame end, 15)
    end
end})
TabsPlayerTeleports:AddDivider()
TabsPlayerTeleports:AddButton({Text = "Refresh Dropdowns", Func = function()
    local players = {}
    for _, p in next, Players:GetPlayers() do if p.Name ~= LocalPlayer.Name then table.insert(players, p.Name) end end
    SelectPlayer:SetValues(players)
end})

-- CPU Settings
local TabsCPUSettings = Tabs.CPUSettings:AddLeftGroupbox("CPU Saving")
TabsCPUSettings:AddToggle("Disable3DRendering", {
    Text = "Disable 3D Rendering", Default = false,
    Callback = function(v) Functions.Disable3DRendering = v RunService:Set3dRenderingEnabled(not v) end
})
TabsCPUSettings:AddToggle("BlackOutScreen", {
    Text = "Black Out Screen", Default = false,
    Callback = function(v) Functions.BlackOutScreen = v
        if v then
            local gui = Instance.new("ScreenGui", game.CoreGui)
            gui.Name = "BlackoutGui"
            gui.ResetOnSpawn = false
            gui.IgnoreGuiInset = true
            local frame = Instance.new("Frame", gui)
            frame.Size = UDim2.new(1, 0, 1, 0)
            frame.BackgroundColor3 = Color3.new(0, 0, 0)
            frame.BorderSizePixel = 0
        else
            game.CoreGui.BlackoutGui:Destroy()
        end
    end
})
TabsCPUSettings:AddButton({Text = "Toggle CPU Saver", Func = function()
    Library.Toggles.Disable3DRendering:SetValue(true)
    Library.Toggles.BlackOutScreen:SetValue(true)
    CustomFPSCap:SetValue(10)
    Library.Toggles.FixFPSCap:SetValue(true)
end, Tooltip = "WARNING: Enables CPU saving features", Risky = true})

local TabsFPSSettings = Tabs.CPUSettings:AddRightGroupbox("FPS Cap")
local fpsCaps = {30, 60}
for _, cap in next, fpsCaps do
    TabsFPSSettings:AddButton({Text = "Set FPS Cap to " .. cap, Func = function() setfpscap(cap) end})
end
local CustomFPSCap = TabsFPSSettings:AddSlider("CustomFPSCap", {Text = "Custom FPS Cap", Default = 60, Min = 3, Max = 60, Rounding = 1, Callback = function(v) setfpscap(v) end})
TabsFPSSettings:AddToggle("FixFPSCap", {
    Text = "Fix FPS Cap", Default = false,
    Callback = function(v) Functions.FixFPSCap = v task.spawn(function() while Functions.FixFPSCap do setfpscap(CustomFPSCap.Value) task.wait(60) end end) end,
    Tooltip = "WARNING: Resets FPS cap every minute", Risky = true
})

-- UI Settings
local TabsUISettings = Tabs.UISettings:AddLeftGroupbox("Menu")
TabsUISettings:AddToggle("KeybindMenuOpen", {Default = Library.KeybindFrame.Visible, Text = "Open Keybind Menu", Callback = function(v) Library.KeybindFrame.Visible = v end})
TabsUISettings:AddToggle("ShowCustomCursor", {Text = "Custom Cursor", Default = true, Callback = function(v) Library.ShowCustomCursor = v end})
TabsUISettings:AddDropdown("NotificationSide", {Values = {"Left", "Right"}, Default = "Right", Text = "Notification Side", Callback = function(v) Library:SetNotifySide(v) end})
TabsUISettings:AddDropdown("DPIDropdown", {Values = {"50%", "75%", "100%", "125%", "150%", "175%", "200%"}, Default = "100%", Text = "DPI Scale", Callback = function(v) Library:SetDPIScale(tonumber(v:gsub("%%", ""))) end})
TabsUISettings:AddDivider()
TabsUISettings:AddLabel("Menu bind"):AddKeyPicker("MenuKeybind", {Default = "RightShift", NoUI = true, Text = "Menu keybind"})
TabsUISettings:AddButton("Unload", function() Library:Unload() end)

-- Final Setup
Library.ToggleKeybind = Library.Options.MenuKeybind
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({"MenuKeybind"})
ThemeManager:SetFolder("seth's cool script")
SaveManager:BuildConfigSection(Tabs.UISettings)
ThemeManager:ApplyToTab(Tabs.UISettings)
SaveManager:LoadAutoloadConfig()
